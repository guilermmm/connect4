import { type NextPage } from "next";
import Head from "next/head";
import {
  BOARD_HEIGHT,
  BOARD_WIDTH,
  createGame,
  dropToken,
  Token,
} from "../utils/game";

import { trpc } from "../utils/trpc";

const initialGame = createGame(BOARD_WIDTH, BOARD_HEIGHT);

const game = dropToken(initialGame, 0)
  .chain((game) => dropToken(game, 0))
  .chain((game) => dropToken(game, 0))
  .chain((game) => dropToken(game, 0))
  .chain((game) => dropToken(game, 2))
  .chain((game) => dropToken(game, 5))
  .chain((game) => dropToken(game, 5))
  .chain((game) => dropToken(game, 3))
  .chain((game) => dropToken(game, 4))
  .chain((game) => dropToken(game, 4))
  .getOrDefault(initialGame);

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-12 bg-gradient-to-b from-[#2e026d] to-[#15162c] px-4 py-16">
        <h1 className="text-5xl font-extrabold tracking-tight text-[hsl(280,100%,70%)] sm:text-[5rem]">
          Connect 4
        </h1>
        <div className="flex flex-col-reverse gap-2 font-mono">
          {game.board.map((row, rowIndex) => (
            <div className="flex flex-row gap-2" key={rowIndex}>
              {row.map((token, tokenIndex) => (
                <div className="flex" key={tokenIndex}>
                  <TokenFc token={token} />
                </div>
              ))}
            </div>
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;

const tokenColor: Record<Token, string> = {
  [Token.Empty]: "bg-white",
  [Token.Red]: "bg-red-500",
  [Token.Green]: "bg-green-500",
};

const TokenFc: React.FC<{ token: Token }> = ({ token }) => (
  <div
    className={`h-8 w-8 rounded-full border-2 border-black ${tokenColor[token]}`}
  />
);
